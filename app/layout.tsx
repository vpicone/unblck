import type { Metadata } from "next";
import {
  ClerkProvider,
  SignInButton,
  SignUpButton,
  SignedIn,
  SignedOut,
  UserButton,
} from "@clerk/nextjs";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import QueryProvider from "./query-provider";
import Link from "next/link";
import {
  SidebarProvider,
  Sidebar,
  SidebarContent,
  SidebarHeader,
  SidebarMenu,
  SidebarMenuItem,
  SidebarMenuButton,
  SidebarGroup,
  SidebarGroupLabel,
  SidebarFooter,
} from "@/components/ui/sidebar";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <QueryProvider>
      <ClerkProvider>
        <html className="dark" lang="en">
          <body
            className={`${geistSans.variable} ${geistMono.variable} antialiased flex min-h-screen`}
          >
            <SidebarProvider>
              <Sidebar className="border-r bg-background">
                <SidebarHeader>
                  <span className="font-bold text-lg tracking-tight">
                    unblck
                  </span>
                </SidebarHeader>
                <SidebarContent>
                  <SidebarGroup>
                    <SidebarGroupLabel>Main</SidebarGroupLabel>
                    <SidebarMenu>
                      <SidebarMenuItem>
                        <SidebarMenuButton asChild isActive={false}>
                          <Link href="/">Home</Link>
                        </SidebarMenuButton>
                      </SidebarMenuItem>
                      <SignedIn>
                        <SidebarMenuItem>
                          <SidebarMenuButton asChild isActive={false}>
                            <Link href="/journal">Journal</Link>
                          </SidebarMenuButton>
                        </SidebarMenuItem>
                        <SidebarMenuItem>
                          <SidebarMenuButton asChild isActive={false}>
                            <Link href="/goals">Goals</Link>
                          </SidebarMenuButton>
                        </SidebarMenuItem>
                      </SignedIn>
                    </SidebarMenu>
                  </SidebarGroup>
                </SidebarContent>
                <SidebarFooter>
                  <SignedOut>
                    <SignInButton />
                    <SignUpButton />
                  </SignedOut>
                  <SignedIn>
                    <UserButton />
                  </SignedIn>
                </SidebarFooter>
              </Sidebar>
              <main className="flex-1">{children}</main>
            </SidebarProvider>
          </body>
        </html>
      </ClerkProvider>
    </QueryProvider>
  );
}
